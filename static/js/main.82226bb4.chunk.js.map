{"version":3,"sources":["components/User.js","components/Page.js","utils/PageFunctions.js","constants/constants.js","containers/App.js","actions/PageActions.js","actions/UserActions.js","reducers/user.js","reducers/page.js","reducers/index.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["User","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","renderTemplate","_this$props","props","name","isFetching","error","react_default","a","createElement","className","onClick","handleLogin","inherits","createClass","key","value","console","log","Component","Page","onBtnClick","e","year","currentTarget","getPhotos","photos","yearsArr","map","item","i","image","sizes","style","background","url","backgroundSize","id","likes","count","_this2","Date","getFullYear","disabled","photosArr","cached","makeYearPhotos","selectedYear","yearPhotos","forEach","date","push","sort","b","getMorePhotos","offset","dispatch","VK","Api","extended","v","r","response","items","setTimeout","sorted","firstYear","years","currYear","getUserYears","type","payload","Error","App","user","page","Page_Page","User_User","connect","store","Auth","login","session","username","first_name","initialState","rootReducer","combineReducers","state","undefined","action","objectSpread","message","createStore","applyMiddleware","thunk","logger","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","es","containers_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.82226bb4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class User extends Component {\n  renderTemplate = () => {\n    const{ name, isFetching, error } = this.props;\n\n    if (isFetching) {\n      return <p>Загружаю...</p>;\n    }\n\n    if (error) {\n      return <p className='error'>Невозможно загрузить данные</p>;\n    }\n\n    if (name) {\n      return <p>Привет, {name}!</p>;\n    } else {\n      return <button className='btn' onClick={this.props.handleLogin}>Войти</button>;\n    }\n  };\n\n  render() {\n    console.log('User render');\n    return <div>{this.renderTemplate()}</div>;\n  }\n}\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Page extends Component {\n\n  onBtnClick = e => {\n    const year = +e.currentTarget.value;\n    this.props.getPhotos(year);\n  };\n\n  renderTemplate = () => {\n    const { year, photos, isFetching, error } = this.props;\n\n    if (error) {\n      return <p className='error'>Не удалось загрузить фото. Обновите страницу.</p>;\n    }\n\n    if (isFetching) {\n      return <p className='loading'>Загрузка...</p>;\n    } else if (!this.props.name) {\n      return <p>Для начала авторизуйтесь</p>;\n    } else if (this.props.name && !photos.length && !this.props.yearsArr.length) {\n      return <p>Теперь нажмите на кнопку</p>;\n    } else {\n      return <div className=\"photos-container\">\n        <h2>{year} год.</h2>\n        <p>У вас {photos.length} фото. Вот самые популярные из них:</p>\n        <div className='photos'>\n          {\n            photos.map((item, i) => {\n              if (i < 6) {\n                const image = item.sizes[2];\n                const style = {\n                  background: `url(${image.url}) center center no-repeat`,\n                  backgroundSize: 'cover',\n                };\n                return <div key={item.id} className='photos__photo-block'>\n                  <div className='photos__photo-block__photo' style={style}>\n\n                  </div>\n                  <p>{item.likes.count} ❤</p>\n                </div>;\n              }\n            })\n          }\n        </div>\n      </div>;\n    }\n  };\n\n  render () {\n    return (\n      <div className='page'>\n        <div className='buttons-wrapper'>\n          {\n            this.props.yearsArr.length\n              ? this.props.yearsArr.map((item, i) =>\n                <button key={i} className='btn' onClick={this.onBtnClick} value={item}>\n                  {item}\n                </button>)\n              : <div className='buttons-wrapper'>\n                <button className=\"btn\" onClick={this.onBtnClick}\n                        value={new Date().getFullYear()}\n                        disabled={this.props.name ? '' : 'disable'}>\n                  Нажми, чтобы начать\n                </button>\n              </div>\n          }\n        </div>\n\n        <div className='info'>\n          {this.renderTemplate()}\n        </div>\n      </div>\n    );\n  }\n}\n\nPage.propTypes = {\n  year: PropTypes.number.isRequired,\n  yearsArr: PropTypes.array.isRequired,\n  photos: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  getPhotos: PropTypes.func.isRequired,\n};\n","import { GET_PHOTO_FAIL, GET_PHOTO_SUCCESS } from '../constants/constants';\n\nexport let photosArr = [];\nexport let yearsArr = [];\nexport let cached = false;\n\nexport const getUserYears = (photos) => {\n  const sorted = photos.sort((a, b) => a.date - b.date);\n  const firstYear = new Date(sorted[0].date * 1000).getFullYear();\n  let years = [];\n  const currYear = new Date().getFullYear();\n  for (let year = firstYear; year <= currYear; year++) {\n    years.push(year);\n  }\n\n  return years;\n};\n\nexport function makeYearPhotos(photos, selectedYear) {\n  let createdYear;\n  let yearPhotos = [];\n\n  photos.forEach(item => {\n    createdYear = new Date(item.date * 1000).getFullYear();\n    if (createdYear === selectedYear) {\n      yearPhotos.push(item);\n    }\n  });\n\n  yearPhotos.sort((a, b) => b.likes.count - a.likes.count);\n\n  return yearPhotos;\n}\n\nexport const getMorePhotos = (year, count, offset, dispatch) => {\n  //eslint-disable-next-line no-undef\n  VK.Api.call(\n    'photos.getAll',\n    { count: count, offset: offset, extended: 1, v: '5.95' },\n    r => {\n      console.log(r);\n      try {\n        photosArr = photosArr.concat(r.response.items);\n        if (offset <= r.response.count) {\n          offset += 200;\n          setTimeout(getMorePhotos, 334, year, count, offset, dispatch);\n        } else {\n          yearsArr = getUserYears(photosArr);\n          let photos = makeYearPhotos(photosArr, year);\n          cached = true;\n\n          dispatch({\n            type: GET_PHOTO_SUCCESS,\n            payload: {\n              photos,\n              yearsArr,\n            },\n          });\n        }\n      } catch (e) {\n        dispatch({\n          type: GET_PHOTO_FAIL,\n          payload: new Error(e),\n          error: true,\n        });\n      }\n    }\n  );\n};\n\n","export const GET_PHOTO_REQUEST = 'GET_PHOTO_REQUEST';\nexport const GET_PHOTO_SUCCESS = 'GET_PHOTO_SUCCESS';\nexport const GET_PHOTO_FAIL = 'GET_PHOTO_FAIL';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { connect } from 'react-redux';\nimport { User } from '../components/User';\nimport { Page } from '../components/Page';\nimport { getPhotos } from '../actions/PageActions';\nimport { handleLogin } from '../actions/UserActions';\n\nclass App extends Component {\n  render() {\n    const { user, page, getPhotos, handleLogin } = this.props;\n    return (\n      <div className=\"App\">\n        <Page name={user.name} year={page.year} yearsArr={page.yearsArr} photos={page.photos} error={page.error}\n              getPhotos={getPhotos} isFetching={page.isFetching}\n        />\n        <User name={user.name} handleLogin={handleLogin}\n              error={user.error} isFetching={user.isFetching}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  user: store.user,\n  page: store.page,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPhotos: year => dispatch(getPhotos(year)),\n  handleLogin: () => dispatch(handleLogin()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { GET_PHOTO_SUCCESS } from '../constants/constants';\nimport { GET_PHOTO_REQUEST } from '../constants/constants';\n\nimport { makeYearPhotos, getMorePhotos, photosArr, cached, yearsArr } from '../utils/PageFunctions';\n\nexport const getPhotos = year => dispatch => {\n  dispatch({\n    type: GET_PHOTO_REQUEST,\n    payload: year,\n  });\n\n  if (cached) {\n    let photos = makeYearPhotos(photosArr, year);\n    dispatch({\n      type: GET_PHOTO_SUCCESS,\n      payload: {\n        photos,\n        yearsArr,\n      },\n    });\n  } else {\n    setTimeout(getMorePhotos, 334, year, 200, 0, dispatch);\n  }\n};\n","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL } from '../constants/constants';\n\nexport const handleLogin = () => dispatch => {\n  dispatch({\n    type: LOGIN_REQUEST,\n  });\n\n  //eslint-disable-next-line no-undef\n  VK.Auth.login(r => {\n    if (r.session) {\n      let username = r.session.user.first_name;\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: username,\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n        error: true,\n        payload: new Error('Не удалось выполнить вход'),\n      });\n    }\n  }, 4);\n};\n","import { LOGIN_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS } from '../constants/constants';\n\nconst initialState = {\n  name: '',\n  isFetching: false,\n};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case (LOGIN_REQUEST) :\n      return { ...state,\n        isFetching: true,\n        error: '',\n      };\n    case (LOGIN_SUCCESS) :\n      return { ...state,\n        isFetching: false,\n        name: action.payload,\n      };\n    case (LOGIN_FAIL) :\n      return { ...state,\n        isFetching: false,\n        error: action.payload.message,\n      };\n    default :\n      return state;\n  }\n};\n","import { GET_PHOTO_REQUEST, GET_PHOTO_SUCCESS, GET_PHOTO_FAIL } from '../constants/constants';\n\nconst initialState = {\n  year: 2019,\n  photos: [],\n  isFetching: false,\n  error: '',\n  yearsArr: [],\n};\n\nexport const pageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case (GET_PHOTO_REQUEST) :\n      return { ...state,\n        year: action.payload,\n        isFetching: true,\n        error: '',\n      };\n    case (GET_PHOTO_SUCCESS) :\n      return { ...state,\n        photos: action.payload.photos,\n        yearsArr: action.payload.yearsArr,\n        isFetching: false,\n        error: '',\n      };\n    case (GET_PHOTO_FAIL) :\n      return { ...state,\n        error: action.payload.message,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { userReducer } from './user';\nimport { pageReducer } from './page';\n\nexport const rootReducer = combineReducers({\n  page: pageReducer,\n  user: userReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from '../reducers/index';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/configureStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store = { store }><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}